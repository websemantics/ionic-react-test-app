import React from 'react';
export interface IonLifeCycleContextInterface {
    onIonViewWillEnter: (callback?: Function) => void;
    ionViewWillEnter: () => void;
    onIonViewDidEnter: (callback?: Function) => void;
    ionViewDidEnter: () => void;
    onIonViewWillLeave: (callback?: Function) => void;
    ionViewWillLeave: () => void;
    onIonViewDidLeave: (callback?: Function) => void;
    ionViewDidLeave: () => void;
}
export declare const IonLifeCycleContext: React.Context<IonLifeCycleContextInterface>;
export declare class DefaultIonLifeCycleContext implements IonLifeCycleContextInterface {
    ionViewWillEnterCallback: Function;
    ionViewDidEnterCallback: Function;
    ionViewWillLeaveCallback: Function;
    ionViewDidLeaveCallback: Function;
    componentCanBeDestroyedCallback: Function;
    onIonViewWillEnter(callback: Function): void;
    ionViewWillEnter(): void;
    onIonViewDidEnter(callback: Function): void;
    ionViewDidEnter(): void;
    onIonViewWillLeave(callback: Function): void;
    ionViewWillLeave(): void;
    onIonViewDidLeave(callback: Function): void;
    ionViewDidLeave(): void;
    onComponentCanBeDestroyed(callback: Function): void;
    componentCanBeDestroyed(): void;
}
